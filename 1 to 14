1:
<!DOCTYPE html>
<html>
<style>
td,tr{
padding-left:0.2px;
padding-bottom:0.2px;
}
.box1{
width:20px;
height:20px;
border:0.2px solid;
background-color:orangered;
}
.box2{
width:20px;
height:20px;
border:0.2px solid;
background-color:coral;
}
.box3{
width:20px;
height:20px;
border:0.2px solid;
background-color:brown;
}
</style>
<body>
<h1 align="center">Lab Program1</h1>
<table align="center">
<tr>
<td></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
</tr>
<tr>
<td></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
</tr>
<tr>
<td></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
</tr>
<tr>
<td></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
</tr>
<tr>
<td></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
<td><div class="box2"></div></td>
<td><div class="box3"></div></td>
<td><div class="box1"></div></td>
</tr>
</table>
</body>
</html


2.
<!DOCTYPE HTML>
<html>
<head>
<style>
#div1 {
 width: 350px;
 height: 70px;
 padding: 10px;
 border: 1px solid #aaaaaa;
}
</style>
<script>
function allowDrop(ev) {
 ev.preventDefault();
}
function drag(ev) {
 ev.dataTransfer.setData("text", ev.target.id);
}
function drop(ev) {
 ev.preventDefault();
 var data = ev.dataTransfer.getData("text");
 ev.target.appendChild(document.getElementById(data));
}
</script>
</head>
<body>
<p>Drag the W3Schools image into the rectangle:</p>
<div id="div1" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
<br>
<img id="drag1" src="img_logo.gif" draggable="true" ondragstart="drag(event)" width="336"
height="69">
</body>
</html>



3.
<!DOCTYPE html>
<html>
<head>
 <title>Calculator</title>
 <style>
 .calculator {
 padding: 10px;
 border-radius: 1em;
 height: 380px;
 width: 400px;
 margin: auto;
 }
 input[type=button] {
 border: solid black 0.5px;
 width: 100%;
 border-radius: 5px;
 height: 70%;
 }
 </style>
</head>
<body>
 <table class="calculator" align="center" style="display: grid ;">
 <tr>
 <td colspan="4"><input type="text" id="result" disabled /></td>
 </tr>
 <tr>
 <td>
 <input type="button" value="(" onclick="display('\(')" />
 </td>
 <td>
 <input type="button" value="CE" onclick="deleter()" />
 </td>
 <td>
 <input type="button" value=")" onclick="display('\)')" />
 </td>
 <td>
 <input type="button" value="C" onclick="clearScreen()" />
 </td>
 </tr>
 <tr>
 <td>
 <input type="button" value="1" onclick="display('1')" />
 </td>
 <td>
 <input type="button" value="2" onclick="display('2')" />
 </td>
 <td>
 <input type="button" value="3" onclick="display('3')" />
 </td>
 <td>
 <input type="button" value="+" onclick="display('+')" />
 </td>
 </tr>
 <tr>
 <td>
 <input type="button" value="4" onclick="display('4')" />
 </td>
 <td>
 <input type="button" value="5" onclick="display('5')" />
 </td>
 <td>
 <input type="button" value="6" onclick="display('6')" />
 </td>
 <td>
 <input type="button" value="-" onclick="display('-')" />
 </td>
 </tr>
 <tr>
 <td>
 <input type="button" value="7" onclick="display('7')" />
 </td>
 <td>
 <input type="button" value="8" onclick="display('8')" />
 </td>
 <td>
 <input type="button" value="9" onclick="display('9')" />
 </td>
 <td>
 <input type="button" value="*" onclick="display('*')" />
 </td>
 </tr>
 <tr>
 <td>
 <input type="button" value="." onclick="display('.')" />
 </td>
 <td>
 <input type="button" value="0" onclick="display('0')" />
 </td>
 <td>
 <input type="button" value="=" onclick="calculate()" />
 </td>
 <td>
 <input type="button" value="/" onclick="display('/')" />
 </td>
 </tr>
 </table>
 <script>
 function display(value) {
 document.getElementById("result").value += value;
 }
 function calculate() {
 var p = document.getElementById("result").value;
 var q = eval(p);
 document.getElementById("result").value = q;
 }
 function clearScreen() {
 document.getElementById("result").value = "";
 }
 function deleter() {
 var a = document.getElementById("result").value;
 a=a.substring(0,a.length-1)
 document.getElementById("result").value = a;
 }
 </script>
</body>
</html>





4.
<!DOCTYPE html>
<html>
<head>
<title>
 Bubbling Event in Javascript
</title>
</head>
<body>
<h2>Bubbling Event in Javascript</h2>
<div id="parent">
<button>
 <h2>Parent</h2>
</button>
<button id="child">
<p>Child</p>
</button>
</div><br>
<script>
 document.getElementById(
"child").addEventListener("click", function () {
 alert("You clicked the Child element!");
 }, false);
 document.getElementById(
"parent").addEventListener("click", function () {
 alert("You clicked the parent element!");
 }, false);
</script>
</body>
</html>



5.
<!DOCTYPE html>
<html>
<head>
<title>map_Filter_Reduce functions</title>
</head>
<body>
<script>
var users = [
{"user": "krishna"},
{"user": "vijay"},
{"user": "vasu"},
{"user": "venu"},
{"user": "rajesh"},
{"user": "varun"},
{"user": "chandra"}
];
let resultDetails = users.map(user => {
 let mark = Math.random() * 100;
 user.mark = mark;
 return user
});
var selectedCandidate = resultDetails.filter(user => {
if(user.mark > 80){
return user;
 }
});
console.log("Map");
console.log(selectedCandidate);
const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];
const result = words.filter(word => word.length > 6);
console.log("Filter");
console.log(result);
const users1 = [
 {
 name: "David John",
 city: "London",
 birthYear: 1998
 },
 {
 name: "Justin",
 city: "Canada",
 birthYear: null
 },
 {
 name: "Yusuf Shea",
 city: "Paris",
 birthYear: 1990
 },
 {
 name: "Zerovsky",
 city: "Russia",
 birthYear: 2002,
 }
];
const currentYear = new Date().getFullYear();
const userNames = users1.reduce((filterUsers, user) => {
 if (user.birthYear && (currentYear - user.birthYear) > 25) {
 filterUsers.push(user.name);
 }
 return filterUsers;
}, []);
console.log("Reduce");
console.log(userNames);
</script>
</body>
</html>




6.
import React, { Component } from 'react'
class Counter extends Component {
 constructor(props) {
 super(props);
 this.state = {
 count: 0
 }
 }
 render() {
 return (
 <div>
 <h1>{this.state.count}</h1>
 <button onClick={() => { this.setState({ count: this.state.count + 1 }) }}>
 Increment</button>
 <button onClick={() => { this.setState({ count: this.state.count - 1 }) }}>
 Decrement</button>
 </div>
 )
 }
}
export default Counter



7.
import React, {Component} from 'react';
class TextColorDemo extends Component {
constructor(props)
 super(props);
this.state = {
color : "#FF00FF"
 }
}
setRed = (e) => {
this.setState({color: "#FF0000"});
 }
 setGreen = (e) => {
this.setState({color: "#00FF00"});
 }
 setBlue = (e) => {
this.setState({color: "#0000FF"});
 }
render () {
return(
<div>
<h1 style={{color:this.state.color}}>
This is CSE A class room
</h1>
<button onClick = {this.setRed}>Red</button>
 <button onClick = {this.setGreen}>Green</button>
 <button onClick = {this.setBlue}>Blue</button>
</div>
);
}
}
export default TextColorDemo;




8.
function App() {
 const students = [
 {stno:'567', name:'Ravi Teja', branch:'cse'},
 {stno:'597', name:'Kiran Teja', branch:'cse'},
 {stno:'561', name:'Hari Teja', branch:'ece'},
 {stno:'569', name:'Varun Teja', branch:'it'},
 {stno:'1269', name:'Dharam Teja', branch:'it'}
 ]
 const s = students.filter(stu=> stu.branch ==='ece')
 return (
 <div className="App">
 <table border="1">
 <tr><th colspan ="3">VVIT, Nambur</th></tr>
 <tr><th colspan ="3">Student Details</th></tr>
 {
 s.map((student,index) =>(
 <tr key={index}>
 <td width="50">{student.stno}</td>
 <td width="150">{student.name}</td>
 <td width="70">{student.branch}</td>
 </tr>
 ))
 }
 </table>
 </div>
 );
}
export default App;



9.
import React,{Component} from 'react'
class Clock extends Component{
 constructor(props){
 super(props);
 this.state={time:new Date()};
 }
 componentDidMount(){
 this.update=setInterval(()=>{
 this.setState({time:new Date()});},1*1000
 );
 }
 componentWillUnmount(){
 clearInterval(this.update);
 }
 render(){
 return(
 <div>
 <h1>Clock</h1>
 <h2>{this.state.time.toLocaleString()}</h2>
 </div>
 )
 }
}
export default Clock




10.
import React, { useState } from 'react';
function Example() {
 const [count, setCount] = useState(0);
 return (
 <div>
 <p>You clicked {count} times</p>
 <button onClick={() => setCount(count + 1)}>
 Click me
 </button>
 </div>
 );
}



11.
import React from 'react';
import BlogContextDemo from './BlogContextDemo'
const blogInfo = {
 React: {
 post: "Learn useContext Hooks",
 author: "Varun K"
 },
 NodeJS: {
 post: "Node Commands",
 author: "Veena M"
 }
};
export const BlogContext = React.createContext(blogInfo);
export default function App() {
 return (
 <div className="App">
 <div>
 <h1>Hello KP</h1>
 <BlogContext.Provider value={blogInfo}>
 <BlogContextDemo />
 </BlogContext.Provider>
 </div>
 </div>
 );
}
import React, {useContext} from "react";
import {BlogContext} from './BlogContext';
function BlogContextDemo() {
 const binfo = useContext(BlogContext);
 return (
 <div>
 <p>Topic: {binfo.React.post}</p>
 <p>Author: {binfo.React.author}</p>
 </div>
 );
}
export default BlogContextDemo;



12.
import React,{useState,useEffect} from 'react';
const Windowwidth=()=>{
 const [WindowWidthsize,setWindowwidthsize]=useState(0);
 useEffect(()=>{
 function handleResize(e){
 const{width}=document.body.getBoundingClientRect();
 setWindowwidthsize(Math.ceil(width));
 }
 window.addEventListener('resize',handleResize);
 return()=>window.removeEventListener('resize',handleResize);
 },[]);
 return(
 <h1>
 The window size {WindowWidthsize} Pixels
 </h1>
 )
 }
export default WindowWidth



13.
import React, {useState, useEffect} from 'react';
import axios from 'axios';
function AxiosDemo() {
const [posts, setPosts] = useState([]);
useEffect(()=> {
axios.get("https://jsonplaceholder.typicode.com/posts")
.then(res => {
setPosts(res.data);
})
.catch(err => { console.log(err); })
}, [])
return(
<div>
<h1> Data Fetching Demo </h1>
<ol>
{
posts.map( post =>
<li key={post.id}>
{post.id}
</li>
) }
</ol>
</div>
);
}
export default AxiosDemo;




14.
import React, {useState} from 'react';
function Bmical() {
const [height,setHeight] = useState(0);
 const [weight, setWeight] = useState(0);
 const [name, setName] = useState("");
 const calculateBMI = ()=> {
 var heightSquared =((height/100) * (height/100));
 var bmi = weight / heightSquared;
 if( bmi < 16)
 window.alert("Hi.."+name+"...You are completely UnderWeight (Severe Thinner)");
 else
 if( bmi >=16 && bmi < 17)
 window.alert("Hi.."+name+"...You are Moderately UnderWeight (Moderate Thinner)");
 else
 if( bmi >=17 && bmi < 18.5)
 window.alert("Hi.."+name+"...You are little UnderWeight (Mild Thinness)");
 else if( bmi >= 18.5 && bmi <= 24.99 ){
 window.alert("Hi.."+name+"...You are in a healthy weight range");}
 else if(bmi >= 25 && bmi <= 29.9){
 window.alert("Hi.."+name+"...You are overweight");}
 else if(bmi >= 30 && bmi <= 34.9){
 window.alert("Hi.."+name+"...You are obese-class-1");}
 else if(bmi >= 35 && bmi <= 39.9){
 window.alert("Hi.."+name+"...You are obese-class-2");}
 else{
 window.alert("Hi.."+name+"...You are obese-class-3");}
 bmi = Math.round(bmi * 100) / 100;
 }
 const submitMe = (e) =>{
 e.preventDefault();
 calculateBMI();
 }
 const handleName = (e) =>{
 setName(e.target.value);
 }
 const handleHeight = (e) =>{
 setHeight(e.target.value);
 }
 const handleWeight = (e) =>{
 setWeight(e.target.value);
 }
 return (
 <div classame="App">
 <h1>BMI Calculator</h1>
 <form onSubmit={submitMe}>
 <label>
 Please enter your name
 </label>
 <input type="text" name="name" value={name} onChange={handleName}/>
 <br/><br/>
 <label>
 Enter your height in cm:
 </label>
 <input type="text" name="height" value={height} onChange={handleHeight} />
 <br/><br/>
 <label>
 Enter your weight in kg :
 </label>
 <br/>
 <input type="text" name="weight" value={weight} onChange={handleWeight}/>
 <br/>
 <br/>
 <input type="submit" value="Submit" onSubmit={submitMe }/>
 </form>
 </div>
 );
 }
export default Bmical;
